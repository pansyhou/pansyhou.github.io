"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6358],{4137:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(t),m=o,v=s["".concat(c,".").concat(m)]||s[m]||d[m]||a;return t?r.createElement(v,l(l({ref:n},p),{},{components:t})):r.createElement(v,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=s;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},5606:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var r=t(3117),o=t(102),a=(t(7294),t(4137)),l=["components"],i={id:"verilator_study",slug:"/verilator_study",title:"verilator\u521d\u5b66\u4e60",authors:"pansyhou"},c=void 0,u={unversionedId:"ysyx/\u9884\u5b66\u4e60\u9636\u6bb5/verilator_study",id:"ysyx/\u9884\u5b66\u4e60\u9636\u6bb5/verilator_study",title:"verilator\u521d\u5b66\u4e60",description:"verilator\u624b\u518c C++\u7684\u793a\u4f8b",source:"@site/docs/ysyx/\u9884\u5b66\u4e60\u9636\u6bb5/verilator.md",sourceDirName:"ysyx/\u9884\u5b66\u4e60\u9636\u6bb5",slug:"/verilator_study",permalink:"/docs/verilator_study",draft:!1,tags:[],version:"current",frontMatter:{id:"verilator_study",slug:"/verilator_study",title:"verilator\u521d\u5b66\u4e60",authors:"pansyhou"},sidebar:"ysyx",previous:{title:"njuics2022",permalink:"/docs/njuics2022"}},p={},d=[{value:"verilator\u624b\u518c C++\u7684\u793a\u4f8b",id:"verilator\u624b\u518c-c\u7684\u793a\u4f8b",level:2},{value:"\u53cc\u63a7\u5f00\u5173",id:"\u53cc\u63a7\u5f00\u5173",level:3},{value:"\u6253\u5370\u5e76\u67e5\u770b\u6ce2\u5f62",id:"\u6253\u5370\u5e76\u67e5\u770b\u6ce2\u5f62",level:3}],s={toc:d};function m(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"verilator\u624b\u518c-c\u7684\u793a\u4f8b"},"verilator\u624b\u518c C++\u7684\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Vour.h"\n#include "verilated.h"\n#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n\nint main(int argc, char** argv) {\n  //Verilated\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u7ba1\u7406\u4eff\u771f\u73af\u5883\uff08\u89e3\u6790\u547d\u4ee4\u884c\n    VerilatedContext* contextp = new VerilatedContext;\n    //main\u51fd\u6570\u4f20\u53c2\u5230Verilated\n    contextp->commandArgs(argc, argv);\n    //\u5b9e\u4f8b\u5316Verilog\u6a21\u5757\u7684C++\u6a21\u578b\n    //Vour\u662fVerilator\u5c06Verilog\u9876\u5c42\u6a21\u5757\uff08\u5982module our\uff09\u8f6c\u6362\u751f\u6210\u7684\u7c7b\uff0c\u4ee3\u8868\u88ab\u6d4b\u8bd5\u7684\u8bbe\u8ba1\uff08DUT\uff09\n    Vour* top = new Vour{contextp};\n    //\u68c0\u67e5Verilog\u4ee3\u7801\u4e2d\u662f\u5426\u8c03\u7528\u4e86$finish\n    while (!contextp->gotFinish()) { top->eval(); }//\u66f4\u65b0\u7ec4\u5408\u903b\u8f91\u548c\u65f6\u5e8f\u903b\u8f91\u72b6\u6001\n    delete top;\n    delete contextp;\n    return 0;\n}\n\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"our.v"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-verilog"},'module our;\n initial begin $display("Hello World"); $finish; end\nendmodule\n\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},".v \u540e\u9762\u9700\u8981\u65b0\u7684\u7a7a\u767d\u4e00\u884c")),(0,a.kt)("p",null,"\u7f16\u8bd1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"verilator --cc --exe --build -j 0 -Wall sim_main.cpp our.v\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u7591\u60d1\uff1a\u8fd9cpp\u600e\u4e48\u5f97\u5230\u8be5module\u5e76\u8fd0\u884c\uff1f")),(0,a.kt)("h3",{id:"\u53cc\u63a7\u5f00\u5173"},"\u53cc\u63a7\u5f00\u5173"),(0,a.kt)("p",null,"\u5c06\u903b\u8f91\u5957\u5165\u73af\u5883\u4e2d\u5373\u53ef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Vour.h"\n#include "verilated.h"\n#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n\nint main(int argc, char** argv) {\n  //Verilated\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u7ba1\u7406\u4eff\u771f\u73af\u5883\uff08\u89e3\u6790\u547d\u4ee4\u884c\n    VerilatedContext* contextp = new VerilatedContext;\n    //main\u51fd\u6570\u4f20\u53c2\u5230Verilated\n    contextp->commandArgs(argc, argv);\n    //\u5b9e\u4f8b\u5316Verilog\u6a21\u5757\u7684C++\u6a21\u578b\n    //Vour\u662fVerilator\u5c06Verilog\u9876\u5c42\u6a21\u5757\uff08\u5982module our\uff09\u8f6c\u6362\u751f\u6210\u7684\u7c7b\uff0c\u4ee3\u8868\u88ab\u6d4b\u8bd5\u7684\u8bbe\u8ba1\uff08DUT\uff09\n    Vour* top = new Vour{contextp};\n    //\u68c0\u67e5Verilog\u4ee3\u7801\u4e2d\u662f\u5426\u8c03\u7528\u4e86$finish\n    while (!contextp->gotFinish()) { \n      int a = rand() & 1;\n      int b = rand() & 1;\n      top->a = a;\n      top->b = b;\n      top->eval();\n      printf("a = %d, b = %d, f = %d\\n", a, b, top->f);\n      assert(top->f == (a ^ b));\n      // top->eval(); \n      }//\u66f4\u65b0\u7ec4\u5408\u903b\u8f91\u548c\u65f6\u5e8f\u903b\u8f91\u72b6\u6001\n    delete top;\n    delete contextp;\n    return 0;\n}\n\n')),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://pic1.imgdb.cn/item/67d6755388c538a9b5bf30ec.png",alt:null})),(0,a.kt)("h3",{id:"\u6253\u5370\u5e76\u67e5\u770b\u6ce2\u5f62"},"\u6253\u5370\u5e76\u67e5\u770b\u6ce2\u5f62"),(0,a.kt)("p",null,"GTKWave\uff0c\u5176\u5b9e\u770bman\u76f4\u63a5\u5e72\u5230example\u5c31\u884c\u4e86"),(0,a.kt)("p",null,"\u4f46\u662fexample\u4e5f\u6ca1\u5199\uff0c\u4e50\u4e86"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Vour.h"\n#include "verilated.h"\n//new\n#include "verilated_vcd_c.h" //\u53ef\u9009\uff0c\u5982\u679c\u8981\u5bfc\u51favcd\u5219\u9700\u8981\u52a0\u4e0a\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n\nint main(int argc, char** argv) {\n    //Verilated\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u7ba1\u7406\u4eff\u771f\u73af\u5883\uff08\u89e3\u6790\u547d\u4ee4\u884c\n    VerilatedContext* contextp = new VerilatedContext;\n    //main\u51fd\u6570\u4f20\u53c2\u5230Verilated\n    contextp->commandArgs(argc, argv);\n    //\u5b9e\u4f8b\u5316Verilog\u6a21\u5757\u7684C++\u6a21\u578b\n    //Vour\u662fVerilator\u5c06Verilog\u9876\u5c42\u6a21\u5757\uff08\u5982module our\uff09\u8f6c\u6362\u751f\u6210\u7684\u7c7b\uff0c\u4ee3\u8868\u88ab\u6d4b\u8bd5\u7684\u8bbe\u8ba1\uff08DUT\uff09\n    Vour* top = new Vour{contextp};\n    //new\n    VerilatedVcdC* tfp = new VerilatedVcdC; //\u521d\u59cb\u5316VCD\u5bf9\u8c61\u6307\u9488\n    contextp->traceEverOn(true); //\u6253\u5f00\u8ffd\u8e2a\u529f\u80fd\n    top->trace(tfp, 0); //\n    tfp->open("wave.vcd"); //\u8bbe\u7f6e\u8f93\u51fa\u7684\u6587\u4ef6wave.vcd\n\n\n    //\u68c0\u67e5Verilog\u4ee3\u7801\u4e2d\u662f\u5426\u8c03\u7528\u4e86$finish\n    while (!contextp->gotFinish()) { \n      int a = rand() & 1;\n      int b = rand() & 1;\n      top->a = a;\n      top->b = b;\n      top->eval();\n      printf("a = %d, b = %d, f = %d\\n", a, b, top->f);\n      //new\n      tfp->dump(contextp->time()); //dump wave\n      contextp->timeInc(1); //\u63a8\u52a8\u4eff\u771f\u65f6\u95f4\n\n      assert(top->f == (a ^ b));\n      // top->eval(); \n      }//\u66f4\u65b0\u7ec4\u5408\u903b\u8f91\u548c\u65f6\u5e8f\u903b\u8f91\u72b6\u6001\n\n    tfp->close();\n    delete top;\n    delete contextp;\n    return 0;\n}\n\n')),(0,a.kt)("p",null,"\u6d3b\u4e86\u5bb6\u4eba\u4eec"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://pic1.imgdb.cn/item/67d67a5788c538a9b5bf320d.png",alt:null})))}m.isMDXComponent=!0}}]);