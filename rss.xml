<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>pansyhou</title>
        <link>https://pansyhou.github.io/</link>
        <description>pansyhou的小站 Blog</description>
        <lastBuildDate>Sat, 08 Mar 2025 12:13:41 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>Copyright © 2025 pansyhou Built with Docusaurus.</copyright>
        <item>
            <title><![CDATA[lifestyle/距离我上篇笔记还是在]]></title>
            <link>https://pansyhou.github.io/lifestyle/距离我上篇笔记还是在</link>
            <guid>https://pansyhou.github.io/lifestyle/距离我上篇笔记还是在</guid>
            <pubDate>Sat, 08 Mar 2025 12:13:41 GMT</pubDate>
            <description><![CDATA[Secondary]]></description>
            <content:encoded><![CDATA[<span class="badge badge--secondary">Secondary</span>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[效益最大化]]></title>
            <link>https://pansyhou.github.io/maximization</link>
            <guid>https://pansyhou.github.io/maximization</guid>
            <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[情况简述]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="情况简述">情况简述<a href="#情况简述" class="hash-link" aria-label="情况简述的直接链接" title="情况简述的直接链接">​</a></h2><p>目前大三，考研党</p><p>现在作息如下</p><p>8.起床 洗漱走路去实验室（路上学习强国/复习单词）</p><p>8.30到位，进行30分钟的新背单词（吃早餐+泡茶喝）</p><p>9.-10. 刷题，顺带复习旧知识</p><p>10.-11.45 数学</p><p>12.30饭堂吃完饭回到实验室</p><blockquote><p>​	这个时间段是困意十足的时候，会进行大量的摸鱼，与纠结要不要睡觉</p></blockquote><p>14.-16.20数学</p><p>16.20-17.20 408</p><p>6.饭后</p><blockquote><p>​	这个时间段也是困意十足的时候，会进行大量的摸鱼，与纠结要不要睡觉</p></blockquote><p>7./7.20开始 408</p><p>11点回宿舍洗澡</p><p>11.40开始准备复习旧单词</p><p>12.30睡觉</p><p><a href="https://github.com/pansyhou/HowToLiveLonger?tab=readme-ov-file" target="_blank" rel="noopener noreferrer">pansyhou/HowToLiveLonger: 程序员延寿指南 | A programmer's guide to live longer (github.com)</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="为什么走路去实验室">为什么走路去实验室？<a href="#为什么走路去实验室" class="hash-link" aria-label="为什么走路去实验室？的直接链接" title="为什么走路去实验室？的直接链接">​</a></h3><ul><li>走路降低全因死亡率超过50%！每天走多少步最合适？《JAMA》子刊超10年研究告诉你答案<ul><li><a href="https://user-images.githubusercontent.com/2707039/163704147-afec1c79-799b-4db8-b547-1a2431d504c9.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://user-images.githubusercontent.com/2707039/163704147-afec1c79-799b-4db8-b547-1a2431d504c9.jpg" alt="走路降低全因死亡率" class="img_ev3q"></a></li><li></li></ul></li></ul><p>当然也有宿舍太郁闷不能走来走去+没有太阳的缘故</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="为什么睡7-75个小时">为什么睡7-7.5个小时?<a href="#为什么睡7-75个小时" class="hash-link" aria-label="为什么睡7-7.5个小时?的直接链接" title="为什么睡7-7.5个小时?的直接链接">​</a></h3><p><a href="https://med.sina.com/article_detail_103_1_105491.html" target="_blank" rel="noopener noreferrer">超30万亚洲人数据：每天睡几个小时最有益长寿？</a></p><ul><li>在男性中，与睡眠时长为7小时相比：睡眠持续时间≥10小时与全因死亡风险增加34%相关；</li><li>在女性中，与睡眠持续时间7小时相比：睡眠持续时间≥10小时与全因死亡风险增加48%相关；</li></ul><p>当然我认为数据也有点鬼的，如果能睡8小时我也想（</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="有没有跑步">有没有跑步？<a href="#有没有跑步" class="hash-link" aria-label="有没有跑步？的直接链接" title="有没有跑步？的直接链接">​</a></h3><p>当然有，但是我认为好像并没有什么用？</p><p>一般我都是在下午5点多溜去跑步/做腹肌撕裂者</p><p>晚上如果做完运动当然会比不做运动精神一点</p><p>但是，假设你成功渡过了，胃部消化的这个过程，晚上其实就不怎么困了</p><p>所以感觉没什么实际的提升？</p><p>但是从长远效益来看，我的评价是多跑点，healthy，练练腹肌/肌肉你的女朋友会喜欢的</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="正题">正题<a href="#正题" class="hash-link" aria-label="正题的直接链接" title="正题的直接链接">​</a></h2><p>那如何解决所谓的效益问题?</p><p>检查发现，其实刷抖音（或者有其他事情distract your attention）和困意十足的两个时间点，是影响因素最大的</p><p>最大程度地决定了你后面时间的专注度与效益</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="解决方案">解决方案<a href="#解决方案" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3><p>对于分心问题，我认为可以从事情的来源与终点进行解决</p><ol><li>来源：<ol><li>假设来源是抖音这种，自身因素占大头的，直接打开勿扰模式+专注前尝试去做一些可以<strong>快速进入专注状态</strong>的事情（这个后面会讲）</li><li>假设来源是事情/人为，well<ol><li>事情：我会把他扔到下一个我困意十足的时间点去做，还能顺便帮我开始专注，也不会让我在进入学习时emo</li><li>人为：童锦程——如果一个女的能影响你的情绪，马上把她好友删了（bushi）开个玩笑，这种时候直接关微信开勿扰逃避就行，影响我心情想让我早点死？<ul><li><a href="https://www.x-mol.com/paper/1288184397379059712/t?recommendPaper=1263704526086578176" target="_blank" rel="noopener noreferrer">悲观情绪与更高的全因死亡率和心血管疾病死亡率有关，但乐观情绪并不能起到保护作用</a></li><li>Pessimism is associated with greater all-cause and cardiovascular mortality, but optimism is not protective<ul><li>在1993-1995年间，一项针对50岁以上澳大利亚人健康的双胞胎研究中包括了生活取向测试（LOT），其中包含乐观和悲观的项目。平均20年后，参与者与来自澳大利亚国家死亡指数的死亡信息相匹配。在2,978名具有很多可用分数的参与者中，有1,068人死亡。生存分析测试了各种乐观因素和悲观情绪分数与任何原因，癌症，心血管疾病或其他已知原因的死亡率之间的关联。年龄调整后的悲观量表上的核心与全因和心血管疾病死亡率相关（每1个标准差单位的危险比，95％置信区间和p值1.134、1.065–1.207、8.85×10 –5和1.196、1.045–1.368、0.0093 ），但不会因癌症死亡。乐观得分与悲观得分之间的相关性很弱（年龄调整后的等级相关系数= − 0.176），但与总死亡率或特定原因死亡率没有显着相关性。反向因果关系（引起悲观情绪的疾病）是不可能的，因为在那种情况下，心血管疾病和癌症都会导致悲观情绪。</li></ul></li></ul></li></ol></li></ol></li><li>终点：万能公式，扔掉手机+开始搞点能快速进入状态的事情</li></ol><p>so em，什么是能快速进入状态的事情？</p><p>一般我不会去做要让我思考or吸收知识的事情</p><p>吸收知识你的大脑会默认抵抗，然后造成懒得思考+想睡觉的困意</p><p>非常之恶心</p><p>所以我会去做电子版的笔记（也就是看一看书，复制粘贴的事情）</p><p>去看看自己感兴趣的书（因为他可以让你感兴趣，然后进行思考）</p><p>又或者是产生一些输出，比如说写一些blog</p><p>大概如此，过了20分钟，你要是真困了，就找我，我给你补个蛋（bushi）</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>工作</category>
        </item>
        <item>
            <title><![CDATA[2024.5.12记]]></title>
            <link>https://pansyhou.github.io/2024.5.12-diary</link>
            <guid>https://pansyhou.github.io/2024.5.12-diary</guid>
            <pubDate>Sun, 12 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[考研也许真的很累，身体与精神上的疲惫感]]></description>
            <content:encoded><![CDATA[<p>考研也许真的很累，身体与精神上的疲惫感</p><p>有很多东西都是矛盾的</p><p>why are so many things contradictory?	</p><p>我真的很困，所以我选择睡觉，但是有些时候睡觉并不能给你想要的回报，醒来之后还是困</p><p>我真的不想学习，但是我真的想去做我想做的事情，我需要它</p><p>我真的很不想看手机上的瀑布流信息，但是我真的需要intake一些mental drugs</p><p>在我最想提神的时候，我需要些劲爆金曲来提神，但是我又无法太专注，不然容易犯困</p><p>需要专注的时候也只能听lofi的歌，辅助我concentrate</p><p>最想谈恋爱的时候，更是谈不了，因为你谁也不认识，你需要学习才能换环境</p><p>how to really relax myself ?</p><p>Are you ready to fight a protracted war?</p><blockquote><p>我真的很困，所以我选择睡觉，但是有些时候睡觉并不能给你想要的回报，醒来之后还是困</p></blockquote><p>所以输入完后要学会输出，之前一直说的stimulate其实就是逼迫自己去整理network然后输出</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="15号补充">15号补充<a href="#15号补充" class="hash-link" aria-label="15号补充的直接链接" title="15号补充的直接链接">​</a></h3><p>我也忘了路上想说什么</p><p>只能说你根本没有打算要复合的准备，你只是把主动权交给我，但是又拒绝我很多次，恋爱不是这么玩的姐妹</p><p>你要是懒，就别靠近我</p><p>机会是留给有准备的人</p><p>也送给我自己</p><p>假如你真的想回到我身边，我相信你有足够的经验，除非你真的之前一点都不在意</p><p>不然就等着我又多个闺蜜吧</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
        </item>
        <item>
            <title><![CDATA[更新日志]]></title>
            <link>https://pansyhou.github.io/daily</link>
            <guid>https://pansyhou.github.io/daily</guid>
            <pubDate>Thu, 07 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[- 2023.9.7：]]></description>
            <content:encoded><![CDATA[<h1>日志</h1><ul><li><p><strong>2023.9.7</strong>：
完成<a href="https://leetcode.cn/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/solutions/1398809/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-sh-epeo/" target="_blank" rel="noopener noreferrer">剑指 Offer 67. 把字符串转换成整数 </a>纯粹浪费我时间，题解都用long long存，自己骗自己呢
明天记得看一看自动机</p><p>linux板：</p><p>目前已经确认应该是启动选项飞到了网络启动导致的vfs启动
<del><strong>但是依旧解决不了nfs不能访问的问题。</strong></del>
很明显问题已经轻松解决，因为uboot的nfs是V2</p><p><a href="https://blog.csdn.net/polaris_zgx/article/details/103571725" target="_blank" rel="noopener noreferrer">u-boot NFS下载文件报错：Loading: <em>** ERROR: File lookup fail解决方法_uboot nfs loading:</em>-CSDN博客</a>
搞好之后第二遍确认他bootz后采用的是网络启动，应该是就是这句</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">netargs </span><span class="token string" style="color:rgb(206, 145, 120)">'setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>已经初步用busybox构建好一些小软件
<img loading="lazy" src="https://pic.imgdb.cn/item/64f9dc86661c6c8e5467f35d" alt="image-20230907222151573" class="img_ev3q"></p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">启动</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token plain">件套</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">tftp </span><span class="token number" style="color:rgb(181, 206, 168)">80800000</span><span class="token plain"> zImage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">tftp </span><span class="token number" style="color:rgb(181, 206, 168)">83000000</span><span class="token plain"> imx6ull</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">14x14</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">emmc</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token number" style="color:rgb(181, 206, 168)">4.3</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">800x480</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">c</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">dtb</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">tftp </span><span class="token number" style="color:rgb(181, 206, 168)">83000000</span><span class="token plain"> imx6ull</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">alientek</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">emmc</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">dtb</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">bootz </span><span class="token number" style="color:rgb(181, 206, 168)">80800000</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">83000000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><strong>2023.9.8</strong>：</p><ul class="contains-task-list containsTaskList_mC6p"><li class="task-list-item"><input type="checkbox" checked="" disabled=""> <!-- -->创建/etc/fstab挂载需要的分区</li><li class="task-list-item"><input type="checkbox" checked="" disabled=""> <!-- -->创建/etc/init.d/rcS 文件启动一些服务</li><li class="task-list-item"><input type="checkbox" checked="" disabled=""> <!-- -->创建/etc/inittab</li><li class="task-list-item"><input type="checkbox" checked="" disabled=""> <!-- -->编写字符驱动笔记</li></ul><p>哥们要准备去考研了呜呜</p></li><li><p><strong>2023.9.9</strong>：</p><ul class="contains-task-list containsTaskList_mC6p"><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->遇到了强有力的问题，驱动加载不进去</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">lib</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">modules</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">4.1</span><span class="token number" style="color:rgb(181, 206, 168)">.15</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">g3dc0a4b # insmod led</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">ko</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.242677</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> led init</span><span class="token operator" style="color:rgb(212, 212, 212)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.245488</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> do_init_module</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'led'</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain">init suspiciously returned </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> it should follow </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token constant" style="color:rgb(100, 102, 149)">E</span><span class="token plain"> convention</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.245488</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> do_init_module</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> loading module anyway</span><span class="token spread operator" style="color:rgb(212, 212, 212)">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.259916</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">CPU</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">PID</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">160</span><span class="token plain"> </span><span class="token literal-property property">Comm</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> insmod </span><span class="token maybe-class-name">Tainted</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">G</span><span class="token plain">           </span><span class="token constant" style="color:rgb(100, 102, 149)">O</span><span class="token plain">    </span><span class="token number" style="color:rgb(181, 206, 168)">4.1</span><span class="token number" style="color:rgb(181, 206, 168)">.15</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">g3dc0a4b #</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.267870</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token maybe-class-name">Hardware</span><span class="token plain"> name</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token maybe-class-name">Freescale</span><span class="token plain"> i</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token constant" style="color:rgb(100, 102, 149)">MX6</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(220, 220, 170)">Ultralite</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token maybe-class-name">Device</span><span class="token plain"> </span><span class="token maybe-class-name">Tree</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.274249</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">80015d78</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">unwind_backtrace</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">8001271c</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">show_stack</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x10</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0x14</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.282017</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">8001271c</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">show_stack</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token number" style="color:rgb(181, 206, 168)">808237e8</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">dump_stack</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x84</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0xc4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.289314</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token number" style="color:rgb(181, 206, 168)">808237e8</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">dump_stack</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">8082199c</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">do_init_module</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x88</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0x1a8</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.297023</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">8082199c</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">do_init_module</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">800964d4</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">load_module</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x1ba8</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0x1e50</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.305072</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">800964d4</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">load_module</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token number" style="color:rgb(181, 206, 168)">80096938</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token maybe-class-name">SyS_finit_module</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x80</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0x90</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2497.312921</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token number" style="color:rgb(181, 206, 168)">80096938</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token maybe-class-name">SyS_finit_module</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain">8000f480</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">ret_fast_syscall</span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token number" style="color:rgb(181, 206, 168)">0x0</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token number" style="color:rgb(181, 206, 168)">0x3c</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>她可以跑到我init的最后一句，<code>mknod /dev/led c 200 0</code>创建节点后，读写/dev/led是失败的，有/dev/led这个文件
但是cat /proc/devices并没有这个设备。
哦原来是我没注册，我就说怎么找不到呢哈哈哈</p></li></ul></li><li><p><strong>2023.9.10</strong>：
写完新字符驱动了，感觉理解还不是很到位
<img loading="lazy" src="https://pic.imgdb.cn/item/64febb19661c6c8e54718ea0" alt="image-20230911150033369" class="img_ev3q"></p></li><li><p><strong>2023.9.11</strong>：
帮帮taffy吧，<a href="https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/description/?envType=study-plan-v2&amp;envId=coding-interviews" target="_blank" rel="noopener noreferrer">剑指 Offer 35. 复杂链表的复制 - 力扣（LeetCode）</a>怎么做不出来呐呜呜</p><div class="language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">    Node* copyRandomList(Node* head) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        if(head== nullptr)return nullptr;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        Node *NewHead = new Node(head-&gt;val);</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        NewHead-&gt;random = head-&gt;random;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        Node *tep = NewHead;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        unordered_map&lt;Node *, Node *&gt; map;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        map[head] = NewHead;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        while (head-&gt;next != nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            map[head-&gt;next] = NewHead-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            //deep copy</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            NewHead-&gt;next = new Node(head-&gt;next-&gt;val);</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            NewHead-&gt;next-&gt;random = head-&gt;next-&gt;random;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            //next head</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            head = head-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            NewHead = NewHead-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        NewHead = tep;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        while (NewHead-&gt;next != nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            //random指的还是以前的ptr，通过以前的ptr找到new</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            NewHead-&gt;random=map[NewHead-&gt;random];</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            NewHead = NewHead-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        return tep;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个问题，我的评价是留给以后的我吧，问题在random的处理上，链式处理感觉出问题了。</p><div class="language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">    Node* copyRandomList(Node* head) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        if (head == nullptr) return nullptr;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        unordered_map&lt;Node*, Node*&gt; map; // 原始节点到复制节点的映射</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        Node* current = head;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        // 第一次遍历：创建新节点并建立映射</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        while (current != nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            map[current] = new Node(current-&gt;val);</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            current = current-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        current = head;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        // 第二次遍历：设置新节点的next和random指针</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        while (current != nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            map[current]-&gt;next = map[current-&gt;next]; // 设置新节点的next</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            map[current]-&gt;random = map[current-&gt;random]; // 设置新节点的random</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            current = current-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        return map[head]; // 返回复制链表的头节点</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个挺厉害的，建立映射还以为是链式的映射，没想到是<strong>每个旧节点和新节点的映射</strong>，最后通过映射将新节点串联起来，吊！</p><p>linux板：</p><p>受不了一点，你能不能直接说这个板子移植完之后设备树的LCD部分驱动不了？</p><p>别欺负我没看网课啊，倒腾了2小时，还以为我移植过程有问题，看了看教程也没说，evk的dtb也是这样，估计cv过去没改好设备树
在后面几章才说...
<img loading="lazy" src="https://pic.imgdb.cn/item/64ff209b661c6c8e549030b9" alt="image-20230911221346507" class="img_ev3q">当然这是大的那块显示屏，我们找到4.3寸的参数套上去，编译<code>make dtbs</code>，将dtb导入就正常驱动lcd了
<img loading="lazy" src="https://pic.imgdb.cn/item/64ff25a2661c6c8e54914949" alt="image-20230911223513556" class="img_ev3q"><img loading="lazy" src="https://pic.imgdb.cn/item/64ff267e661c6c8e549169e4" alt="aa84f39b3638cff3bb40dd65b4e44c0" class="img_ev3q"></p></li><li><p><strong>2023.9.12</strong>：
<a href="https://leetcode.cn/problems/shan-chu-lian-biao-de-jie-dian-lcof/description/?envType=study-plan-v2&amp;envId=coding-interviews" target="_blank" rel="noopener noreferrer">剑指 Offer 18. 删除链表的节点 - 力扣（LeetCode）</a>搞了点简单题</p><div class="language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ListNode* deleteNode(ListNode* head, int val) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        if(head== nullptr)return nullptr;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        if(head-&gt;val==val)return head-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ListNode *left=head;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        while (left-&gt;next != nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            if (left-&gt;next-&gt;val == val) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                if(left-&gt;next-&gt;next== nullptr) {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                    left-&gt;next = nullptr;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                else{</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                    left-&gt;next = left-&gt;next-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                return head;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            left = left-&gt;next;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        return head;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>没有用双指针，但是双指针能更好地规避一些问题，比如头节点就是val、尾结点是val要置空
可以看出来双指针能更简洁		</p></li><li><p><strong>2023.9.14</strong>：哥们12号分手了，心情有点不是很好，不是很想写日志了先。</p><p>不过记到设备树了。</p></li><li><p><strong>2023.9.19</strong>：pinctrl部分有点小难？主要是很绕</p><blockquote><p><img loading="lazy" src="https://pic.imgdb.cn/item/6509473d204c2e34d3e5575d" alt="image-20230919143314067" class="img_ev3q">没懂那个cell代表什么极性</p></blockquote></li><li><p><strong>2023.9.22</strong>：今日有老板把我之前的uboot直接写进emmc里了，崩溃</p><p>只好重新复活老uboot</p><ul class="contains-task-list containsTaskList_mC6p"><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->EMMC8线驱动</p></li><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->LCD</p></li><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->NET</p><blockquote><p>Net:   CPU Net Initialization Failed</p><p>No ethernet found.</p></blockquote><p>我也忘了怎么修好的了，重新设置网络环境变量</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv ipaddr </span><span class="token number" style="color:rgb(181, 206, 168)">192.168</span><span class="token number" style="color:rgb(181, 206, 168)">.123</span><span class="token number" style="color:rgb(181, 206, 168)">.122</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv ethaddr b8</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain">ae</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain">1d</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token number" style="color:rgb(181, 206, 168)">01</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token number" style="color:rgb(181, 206, 168)">00</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token number" style="color:rgb(181, 206, 168)">00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv gatewayip </span><span class="token number" style="color:rgb(181, 206, 168)">192.168</span><span class="token number" style="color:rgb(181, 206, 168)">.123</span><span class="token number" style="color:rgb(181, 206, 168)">.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv netmask </span><span class="token number" style="color:rgb(181, 206, 168)">255.255</span><span class="token number" style="color:rgb(181, 206, 168)">.255</span><span class="token number" style="color:rgb(181, 206, 168)">.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv serverip </span><span class="token number" style="color:rgb(181, 206, 168)">192.168</span><span class="token number" style="color:rgb(181, 206, 168)">.123</span><span class="token number" style="color:rgb(181, 206, 168)">.109</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">saveenv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->tftp</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/650d8d24c458853aef5da9a1" alt="image-20230922204835590" class="img_ev3q">在想启动tftp 80800000 zImage的时候顺利爆金币了...</p><p>倒腾了一晚上，在CSDN发现了问题所在
<a href="https://blog.csdn.net/qq_43605009/article/details/113248949" target="_blank" rel="noopener noreferrer">IMX6ULL 使用U-Boot Ping命令内核重启<em>uboot使用网络命令导致重启</em>琰婧的博客-CSDN博客</a></p><p>内核panic我也要跟着panic了，谁知道是交叉编译的问题...</p><p>但是呢，我觉得换编译器是更加离谱且困难的问题，于是再找找其他方案</p><p><a href="https://blog.csdn.net/welbell_uplooking/article/details/115029140" target="_blank" rel="noopener noreferrer">设置好uboot网络地址后，ping主机时，uboot重启_沙漠那点绿的博客-CSDN博客</a></p><p>尼玛是内存对齐的问题</p><p>翻到CP15的技术文档，首先是将SCTLR的寄存器读到了r0进行修改</p><p><code>mrc   p15, 0, r0, c1, c0, 0</code>cpn=c1,cpm=c0</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/650da545c458853aef77655e" alt="image-20230922223132425" class="img_ev3q"></p><p><img loading="lazy" src="https://pic.imgdb.cn/item/650da51fc458853aef775f9a" alt="image-20230922223054414" class="img_ev3q"></p><p>focus on the second bit</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">  orr r0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> r0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> #</span><span class="token number" style="color:rgb(181, 206, 168)">0x00000002</span><span class="token plain"> @ </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token plain"> bit </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">--</span><span class="token constant" style="color:rgb(100, 102, 149)">A</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token maybe-class-name">Align</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  orr r0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> r0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> #</span><span class="token number" style="color:rgb(181, 206, 168)">0x00000800</span><span class="token plain"> @ </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token plain"> bit </span><span class="token number" style="color:rgb(181, 206, 168)">11</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token constant" style="color:rgb(100, 102, 149)">Z</span><span class="token operator" style="color:rgb(212, 212, 212)">--</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">BTB</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://pic.imgdb.cn/item/650da5b0c458853aef778493" alt="image-20230922223304124" class="img_ev3q"></p><p>源代码是这位爷设1对吧，这确实是内存对齐检测的问题</p><p>其实可以讲通了，新版的编译器可能在内存越界/犯法问题，启动内存检测后导致非法，MMU强制重启系统</p><p>把这玩意关了也不是不行？可能会爆点金币，但是过渡到Linux kernel启动后感觉没事的话也不是不行</p><p>当然这是我这种不专业的外行人看法，欢迎大佬指正━(<em>｀∀´</em>)ノ亻!</p><p>最后要从网路启动需要设置bootargs</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv bootargs </span><span class="token string" style="color:rgb(206, 145, 120)">'console=ttymxc0,115200 root=/dev/nfs nfsroot=192.168.123.109:/home/pansy/linux/nfs/rootfs,proto=tcp rw ip=192.168.123.122:192.168.123.109:192.168.123.1:255.255.255.0::eth0:off'</span><span class="token plain"> </span><span class="token comment" style="color:rgb(106, 153, 85)">//设置  bootargs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">setenv bootargs </span><span class="token string" style="color:rgb(206, 145, 120)">'console=ttymxc0,115200 root=/dev/nfs nfsroot=192.168.123.109:/home/pansy/linux/nfs/rootfs,proto=tcp rw ip=192.168.123.122:192.168.123.109:192.168.123.1:255.255.255.0::eth0:off'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><blockquote><p>life is bullshit , but you have no choice and have to move on.</p></blockquote></li><li><p><strong>2023.9.23</strong>：
今儿总算是启动了，bootargs设置了一百年..</p><p>很逆天的是，我printenv后有两个bootargs，有时候直接复制的命令是直接不能用的</p><p>严重怀疑是串口终端有问题，secureRT要注册就没用...</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/650e7875c458853aeffb64f1" alt="image-20230923133229745" class="img_ev3q"></p><p>ok，成功电亮pinctrl和gpio子系统</p></li><li><p><strong>2023.9.26</strong>：</p><p>前几天写了一堆锁的例程，atomic、mutex、semaphore、spainlock</p><p>写了gpio用原子锁的</p><p>今天把按键的也写了</p><p>然后学习定时器</p></li><li><p><strong>2023.10.6</strong>：</p><p>突然发现好久没有更新了，Linux小断了一段时间，最近在做JSp+servlet+mybatis这坨泄</p></li><li><p><strong>2023.10.11</strong>：</p><p>a sort of vulnability , sensitive</p><p>我发现，如果你陷入一种内耗之中（比如感情</p><p>可以尝试用英语去表达这种内耗，然后你就会陷入一种无语之中，因为你不知如何表达，那就算了</p><p>实在不行就去做几套英语真题，30%正确率做到你自闭</p><p>还想什么女人？</p><p>vulnability</p></li><li><p><strong>2023.10.31</strong>：</p><p>很久不更新系列 )D</p><p>最近接了一单大的，就是一个智能音箱</p><p>base on android，感觉要讲的话就是长篇大论了</p><blockquote><p>感觉踩雷的东西挺多的</p></blockquote></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[C用法笔记]]></title>
            <link>https://pansyhou.github.io/c-study-notes</link>
            <guid>https://pansyhou.github.io/c-study-notes</guid>
            <pubDate>Sat, 19 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[U-boot]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="u-boot">U-boot<a href="#u-boot" class="hash-link" aria-label="U-boot的直接链接" title="U-boot的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="819">8.19<a href="#819" class="hash-link" aria-label="8.19的直接链接" title="8.19的直接链接">​</a></h3><p>在uboot/common/board_f.c中，有这初始化波特率到gd的代码</p><ol><li><p>弱函数声明接口</p></li><li><p>字符串获得config实现不同arch的初始化</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/**</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * Decode the integer value of an environment variable and return it.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param name      Name of environemnt variable</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param base      Number base to use (normally 10, or 16 for hex)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param default_val   Default value to return if the variable is not</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> *          found</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @return the decoded value, or default_val if not found</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ulong </span><span class="token function" style="color:rgb(220, 220, 170)">getenv_ulong</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">char</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> base</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> ulong default_val</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/*</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">     * We can use getenv() here, even before relocation, since the</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">     * environment variable value is an integer and thus short.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">char</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain">str </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">getenv</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> str </span><span class="token operator" style="color:rgb(212, 212, 212)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">simple_strtoul</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">NULL</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> base</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> default_val</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="linux">Linux<a href="#linux" class="hash-link" aria-label="Linux的直接链接" title="Linux的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="this_module">THIS_MODULE<a href="#this_module" class="hash-link" aria-label="THIS_MODULE的直接链接" title="THIS_MODULE的直接链接">​</a></h3><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token macro property directive-hash">#</span><span class="token macro property directive keyword" style="color:rgb(86, 156, 214)">define</span><span class="token macro property"> </span><span class="token macro property macro-name">THIS_MODULE</span><span class="token macro property"> </span><span class="token macro property expression punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token macro property expression punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token macro property expression keyword" style="color:rgb(86, 156, 214)">struct</span><span class="token macro property expression"> </span><span class="token macro property expression class-name" style="color:rgb(78, 201, 176)">module</span><span class="token macro property expression"> </span><span class="token macro property expression operator" style="color:rgb(212, 212, 212)">*</span><span class="token macro property expression punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token macro property expression number" style="color:rgb(181, 206, 168)">0</span><span class="token macro property expression punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">struct</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">file_operations</span><span class="token plain"> led_fops </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">owner </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> THIS_MODULE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">open </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> led_open</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">read </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> led_read</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">write </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> led_write</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">release </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> led_release</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这是文件的fop结构体，重点在<code>THIS_MODULE</code>宏</p><p>这个字段说明谁是<code>struct file_operations</code>的所有者。这可以防止模块在运行时被卸载。当初始化为<code>THIS_MODULE</code>时，当前模块拥有其所有权。</p><p>可能和我想象中的不一样吧</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[做更好地自己-暑假反思]]></title>
            <link>https://pansyhou.github.io/to-be-a-better-self.md</link>
            <guid>https://pansyhou.github.io/to-be-a-better-self.md</guid>
            <pubDate>Fri, 18 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[fuxk me , fuxk you , fuxk the world]]></description>
            <content:encoded><![CDATA[<p>fuxk me , fuxk you , fuxk the world</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="改善信息获取渠道">改善信息获取渠道<a href="#改善信息获取渠道" class="hash-link" aria-label="改善信息获取渠道的直接链接" title="改善信息获取渠道的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="读一些你平时不会读到的">读一些你平时不会读到的<a href="#读一些你平时不会读到的" class="hash-link" aria-label="读一些你平时不会读到的的直接链接" title="读一些你平时不会读到的的直接链接">​</a></h3><p>such as背个单词</p><ol><li><a href="http://bbs.chinaunix.net/" target="_blank" rel="noopener noreferrer">论坛-Chinaunix</a></li><li><a href="https://www.52audio.com/archives/category/teardowns" target="_blank" rel="noopener noreferrer">拆解 - 我爱音频网 (52audio.com)</a></li><li><a href="https://www.zhaixue.cc/" target="_blank" rel="noopener noreferrer">宅学部落 | 专注嵌入式精品教程：RTOS,嵌入式,C语言,Linux内核,驱动开发,物联网,AIoT (zhaixue.cc)</a></li><li><a href="https://www.zhaixue.cc/" target="_blank" rel="noopener noreferrer">https://www.zhaixue.cc/</a></li><li>看linus骂人<a href="https://lkml.org/" target="_blank" rel="noopener noreferrer">LKML.ORG - the Linux Kernel Mailing List Archive</a></li><li>嵌入式linux wiki<a href="https://elinux.org/Main_Page" target="_blank" rel="noopener noreferrer">eLinux.org</a></li><li><a href="http://www.wowotech.net/" target="_blank" rel="noopener noreferrer">蜗窝科技 (wowotech.net)</a></li><li>[<a href="https://openwrt.org/" target="_blank" rel="noopener noreferrer">OpenWrt Wiki<!-- -->]<!-- --> Welcome to the OpenWrt Project</a></li><li><a href="https://gitee.com/explore" target="_blank" rel="noopener noreferrer">开源软件 - Gitee.com</a></li></ol><blockquote><p>对于大公司而言，分工比较细，一个人可能只负责某个模块。但如果你只会某一层，或者某个模块，只关注自己的一亩三分地，没有大局观，也不可能做好自己负责某一层或某个模块。你的目标是打磨好自己的模块，系统出问题时，不要让bug定位到你的模块里，让你来背锅。</p></blockquote><p>不要太好笑</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="接触不同的世界观">接触不同的世界观<a href="#接触不同的世界观" class="hash-link" aria-label="接触不同的世界观的直接链接" title="接触不同的世界观的直接链接">​</a></h3><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="应用你新学到的东西">应用你新学到的东西<a href="#应用你新学到的东西" class="hash-link" aria-label="应用你新学到的东西的直接链接" title="应用你新学到的东西的直接链接">​</a></h3>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>plan</category>
        </item>
        <item>
            <title><![CDATA[最近三个月计划]]></title>
            <link>https://pansyhou.github.io/plan-before-september</link>
            <guid>https://pansyhou.github.io/plan-before-september</guid>
            <pubDate>Thu, 22 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[逃离后的深造即将开始。]]></description>
            <content:encoded><![CDATA[<p>逃离后的深造即将开始。</p><p>差不多就要静下心了吧，锻炼身体也只是为了你更好的学习</p><p>眼前不止要局限于此，虽然说我考不上清华北大吧，但是，还是想提升自己</p><p>虽说受不了的话，就要学会给自己下台阶，但是还是想尝试下</p><blockquote><span class="badge badge--info">要学会给自己行动力。</span></blockquote><p>6.20号，我已经开始锻炼和每日一题了，虽然说题型简单，但也总算是抽出来40分钟提升自己。</p><p>目标是提出来2小时， 给多20分钟给刷题，再来50分钟给操作系统</p><p>不想做自己的偏科生了，天天说沉淀，结果没动手</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="目标">目标<a href="#目标" class="hash-link" aria-label="目标的直接链接" title="目标的直接链接">​</a></h2><ol><li><p>出一套Bsp库的教程，顺便复习一些基础的外设，然后升级为C++库（可参考东大、深大），支持CortexM4和M7（预计也要一个月，慢慢来）</p></li><li><p>学STL库 ，补充C++</p></li><li><p>两个星期速成南京大学OS</p></li><li><p>看esp32s3 linux</p><ol><li>linux内核设计与实现</li></ol></li><li><p>学算法，每天刷一到两小时，完善程序员内功</p><ol><li>可以</li></ol></li></ol><p>读《C陷阱和缺陷》、计网</p><p>计算机图形学</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>plan</category>
        </item>
        <item>
            <title><![CDATA[web大作业]]></title>
            <link>https://pansyhou.github.io/DUGT-Web-bighomework</link>
            <guid>https://pansyhou.github.io/DUGT-Web-bighomework</guid>
            <pubDate>Wed, 21 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[前端大作业，听说没备案加上不能放学校logo，连夜撤掉]]></description>
            <content:encoded><![CDATA[<p>前端大作业，听说没备案加上不能放学校logo，连夜撤掉</p><p>虽然说github pages在国外，可以不备案的，但是还是撤了</p><h1>DUGT-Web-bighomework</h1><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="实验环境">实验环境<a href="#实验环境" class="hash-link" aria-label="实验环境的直接链接" title="实验环境的直接链接">​</a></h2><ul><li>系统：windows10</li><li>屏幕分辨率：2k</li><li>浏览器：Microsoft Edge版本 113.0.1774.35 (正式版本) (64 位)</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="实验项目需求">实验项目需求<a href="#实验项目需求" class="hash-link" aria-label="实验项目需求的直接链接" title="实验项目需求的直接链接">​</a></h2><ol><li>有大主页index，可以对整个战队有个清晰的链接</li><li>有对赛事的大介绍，同时对赛事细节做介绍</li><li>有战队的大介绍，对战队的分组做介绍</li><li>有对战队的报名表单</li><li>适当的缩放对元素的定位大小等等是可动的（不会乱串导致奇怪的现象</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="实验报告内容">实验报告内容<a href="#实验报告内容" class="hash-link" aria-label="实验报告内容的直接链接" title="实验报告内容的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="index主页即导航栏上robomaster图标跳转">index主页，即导航栏上RoboMaster图标跳转<a href="#index主页即导航栏上robomaster图标跳转" class="hash-link" aria-label="index主页，即导航栏上RoboMaster图标跳转的直接链接" title="index主页，即导航栏上RoboMaster图标跳转的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="html结构组成">html结构组成<a href="#html结构组成" class="hash-link" aria-label="html结构组成的直接链接" title="html结构组成的直接链接">​</a></h4><p><img loading="lazy" src="https://pic.imgdb.cn/item/649013111ddac507cc3ada2e" alt="image-20230619163425733" class="img_ev3q"></p><p>由一个<code>__nuxt</code>和<code>__layout</code>的盒子封装主体</p><ul><li><code>nav-header</code>为导航栏盒子</li><li><code>seasonImg</code>为导航栏下面的视频、标题和按钮的盒子</li><li><code>homelist</code>为介绍精彩对局、加入ACE的海报和按钮的盒子</li><li><code>related-nav</code>为关联链接的导航栏</li><li><code>related-content</code>是导航栏点到之后显示的内容盒子</li><li><code>_footer</code>为最下面的版权、微信、哔哩哔哩的宣传盒子</li></ul><p>注意，下面的页面结构均为这样的，不做赘述。</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="最上方的展示">最上方的展示<a href="#最上方的展示" class="hash-link" aria-label="最上方的展示的直接链接" title="最上方的展示的直接链接">​</a></h4><p><img loading="lazy" src="https://pic.imgdb.cn/item/649012a11ddac507cc3a5154" class="img_ev3q"></p><p>为了实现在视频上方加入标题，在视频后面加了一层屏蔽罩</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/649014a61ddac507cc3d1a54" alt="image-20230619164109267" class="img_ev3q"></p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="中间海报的展示">中间海报的展示<a href="#中间海报的展示" class="hash-link" aria-label="中间海报的展示的直接链接" title="中间海报的展示的直接链接">​</a></h4><p>中间的3个海报采用了flex容器，不换行，同时设定最小宽度和拉伸，可以最大限度的防止适当的缩放对海报的定位大小等等是可动的。</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/649015a21ddac507cc3e7f00" alt="image-20230619164519264" class="img_ev3q"></p><p> 中间的相关内容导航栏为了图方便，采用了js来实现切换。</p><p>通过添加和删除<code>active</code> 类，编写了<code>querySelectorAll</code> 和 <code>forEach</code> 方法来遍历元素列表，并使用模板字符串来构造选择器。可以实现简单的标签页切换功能</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">showTab</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token parameter">tabId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)">// 删除所有tab-link的active类</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> tabLinks </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(156, 220, 254)">document</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">querySelectorAll</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'.tab-link'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  tabLinks</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">forEach</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token parameter">link</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(212, 212, 212)">=&gt;</span><span class="token plain"> link</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">remove</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'active'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)">// 隐藏所有的tab-content</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> tabContents </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(156, 220, 254)">document</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">querySelectorAll</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'.tab-content'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  tabContents</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">forEach</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token parameter">content</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(212, 212, 212)">=&gt;</span><span class="token plain"> content</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">remove</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'active'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)">// 显示指定的tab-content</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> tabLink </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(156, 220, 254)">document</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">querySelector</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token template-string string" style="color:rgb(206, 145, 120)">a[href="#</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">${</span><span class="token template-string interpolation">tabId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token template-string string" style="color:rgb(206, 145, 120)">"]</span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  tabLink</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">add</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'active'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> tabContent </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(156, 220, 254)">document</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">querySelector</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token template-string string" style="color:rgb(206, 145, 120)">#</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">${</span><span class="token template-string interpolation">tabId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  tabContent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">add</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'active'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="页脚的展示">页脚的展示<a href="#页脚的展示" class="hash-link" aria-label="页脚的展示的直接链接" title="页脚的展示的直接链接">​</a></h4><p>最下面的footer比较有意思的是左边两个宣传的元素，利用了一个翻转卡片hover+transform: rotateY();实现鼠标移动上去后翻转显示另一边二维码，因为二维码一般是有冗余的，不必担心扫不到。</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/649016c11ddac507cc3ffa79" alt="image-20230619165009378" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="introduce赛事介绍页面">introduce赛事介绍页面<a href="#introduce赛事介绍页面" class="hash-link" aria-label="introduce赛事介绍页面的直接链接" title="introduce赛事介绍页面的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="最上面的展示">最上面的展示<a href="#最上面的展示" class="hash-link" aria-label="最上面的展示的直接链接" title="最上面的展示的直接链接">​</a></h4><p><img loading="lazy" src="https://pic.imgdb.cn/item/649018361ddac507cc41dde1" alt="image-20230619165620259" class="img_ev3q"></p><p>最上面的海报由一个图加上width100%实现的缩放图片不动，同时，标题由一个h1加上绝对定位实现的内嵌</p><p>下面的关于赛事是一个大盒子，h2有一个毛玻璃效果的background。</p><p>同时主体由一个中盒子包着图片和内容，加上相对定位微调后实现居中</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="中间的展示">中间的展示<a href="#中间的展示" class="hash-link" aria-label="中间的展示的直接链接" title="中间的展示的直接链接">​</a></h4><p><img loading="lazy" src="https://pic.imgdb.cn/item/649019271ddac507cc431edc" alt="image-20230619170018196" class="img_ev3q"></p><p>赛事设置里有两个小卡片，里面也是用hover+transform实现的过渡，加上background</p><p>下面的兵种介绍也类似，毛玻璃背景+盒子</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="战队介绍">战队介绍<a href="#战队介绍" class="hash-link" aria-label="战队介绍的直接链接" title="战队介绍的直接链接">​</a></h3><p><img loading="lazy" src="https://pic.imgdb.cn/item/649019971ddac507cc444720" alt="image-20230619170213098" class="img_ev3q"></p><p>后来发现了不同的居中方法，在 <strong>flex 格式化上下文</strong>中，设置了 <code>margin: auto</code> 的元素，在通过 <code>justify-content</code> 和 <code>align-self</code> 进行对齐之前，任何正处于空闲的空间都会分配到该方向的自动 margin 中去</p><p>这里，很重要的一点是，margin auto 的生效不仅是水平方向，垂直方向也会自动去分配这个剩余空间。</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="中间展示">中间展示<a href="#中间展示" class="hash-link" aria-label="中间展示的直接链接" title="中间展示的直接链接">​</a></h4><p><img loading="lazy" src="https://pic.imgdb.cn/item/64901a221ddac507cc456ba9" alt="image-20230619170433530" class="img_ev3q"></p><p>下面这里用了flex布局，采用了几个盒子将组别装起来，比较好的是可以根据缩放来分配多少个盒子</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/64901a511ddac507cc45b1c3" alt="image-20230619170520141" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="报名中心">报名中心<a href="#报名中心" class="hash-link" aria-label="报名中心的直接链接" title="报名中心的直接链接">​</a></h3><p>写了个form套进去</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/64901a6d1ddac507cc45dcec" alt="image-20230619170548548" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="记得来我的博客康康哦">记得来我的博客康康哦=&gt;<a href="#记得来我的博客康康哦" class="hash-link" aria-label="记得来我的博客康康哦=>的直接链接" title="记得来我的博客康康哦=>的直接链接">​</a></h3>]]></content:encoded>
            <category>前端</category>
        </item>
        <item>
            <title><![CDATA[对自己好点]]></title>
            <link>https://pansyhou.github.io/become-a-better-self</link>
            <guid>https://pansyhou.github.io/become-a-better-self</guid>
            <pubDate>Thu, 15 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[俯卧撑]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="俯卧撑">俯卧撑<a href="#俯卧撑" class="hash-link" aria-label="俯卧撑的直接链接" title="俯卧撑的直接链接">​</a></h2><p>参考链接：<a href="https://www.bilibili.com/video/BV1Ta411K72v/?share_source=copy_web&amp;vd_source=b75823388a5bcd595be80275bf87f2b5" target="_blank" rel="noopener noreferrer">【从0到1】如何做一个标准的俯卧撑! (并提高数量)-帅soserious</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="入手">入手<a href="#入手" class="hash-link" aria-label="入手的直接链接" title="入手的直接链接">​</a></h3><p>刚开始，可以蹲着保持平板支撑的动作，然后让身体保持一条直线</p><p>可能会出现的问题：</p><ol><li>塌腰</li><li>抬屁股</li><li>膝盖弯曲</li></ol><p>可能是核心力量不足的问题</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/648acfd91ddac507cc839d5a" alt="image-20230615164606947" class="img_ev3q"></p><h4></h4><ol><li>掌心向上，趴在地上</li><li>向上挺胸，收缩背部</li><li>外旋手掌</li><li>持续5s</li></ol><p><img loading="lazy" src="https://pic.imgdb.cn/item/648ad07f1ddac507cc85de89" alt="image-20230615164858865" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="手臂力量不足">手臂力量不足<a href="#手臂力量不足" class="hash-link" aria-label="手臂力量不足的直接链接" title="手臂力量不足的直接链接">​</a></h3><p>首先先做60°的推墙俯卧撑，做5+</p><p>问题：
1.起始位置身体已经发生变形
2.动作过程中，出现手肘或手腕的疼痛
3.不自觉地耸肩或低头
4.下落时没法到达最低点
解决方案：
01 - 01:21
02 - 02:33
03 - 03:34
04 - 04:43</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>提升</category>
        </item>
        <item>
            <title><![CDATA[23赛季总结]]></title>
            <link>https://pansyhou.github.io/2023season-summary</link>
            <guid>https://pansyhou.github.io/2023season-summary</guid>
            <pubDate>Mon, 05 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[2023赛季是一个坎坷的赛季，比以往经历了更多的风风雨雨，虽然打不了正赛，但是也总算是在邀请赛中展现出属于我们东莞理工学院ACE的风采。]]></description>
            <content:encoded><![CDATA[<p>2023赛季是一个坎坷的赛季，比以往经历了更多的风风雨雨，虽然打不了正赛，但是也总算是在邀请赛中展现出属于我们东莞理工学院ACE的风采。</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="工程篇">工程篇<a href="#工程篇" class="hash-link" aria-label="工程篇的直接链接" title="工程篇的直接链接">​</a></h2><p><img loading="lazy" src="https://pic.imgdb.cn/item/6485837b1ddac507cc989ab4" alt="f792ca817f821c5fd23484ecea146b6" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7月份暑假打底巩固基础">7月份，暑假打底，巩固基础<a href="#7月份暑假打底巩固基础" class="hash-link" aria-label="7月份，暑假打底，巩固基础的直接链接" title="7月份，暑假打底，巩固基础的直接链接">​</a></h3><p>暑假开始，迎来的是来自廷廷的考核。</p><p>因为我比较摆，也不想看蒋汶伸的恐怖代码</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_S0QG"><p>尽管我觉得他的代码可读性差，但是整体架构和代码量是很少的，也是值得去学习的。</p></div></div><p>幸好被蒋汶伸救了一救，不然我可能考核都过不了（我只在22赛季上场前陪他调过小云台、抬升、翻转夹爪而已，全在吃老本</p><p>之后过了考核，我就正式在暑假留校了。</p><p>蒋汶伸给我的任务是，学习家华的FSM有限状态机。</p><p>不可否认，FSM有限状态机是一个很厉害的东西，但是，如果在场上想要遥控器键鼠两者混用（或者说是一个全局状态机</p><p>那还是要优化的，可能需要杰框的那种模式比较合适</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_S0QG"><p>可能自定义遥控器+键鼠才是以后的未来的正确道路，就可以延续这套大框架了。</p><p>但是建议还是学一点控制框架，康康能不能优化。</p></div></div><p>学完之后就开始把底层的驱动，比如Dr16的双缓冲、单缓冲、环形队列，CAN等等，写完了。</p><p>蒋汶伸的第二个任务是写一个CAN的FIFO，他们当时翻转夹爪控制不好可能是因为任务频率控制不好还是CAN堵了。</p><p>我看了很多开源，终于在官方的步兵代码找到了CAN+FIFO的发送代码，包括我现在用的DetectTask也是官方的，靠他实现了DR16插哪个地方都可以的操作</p><p>去年的工程到手的时候，底盘被蒋汶伸弄坏了，所以电控只能调抬升和云台。</p><blockquote><p>但是我只调了抬升哈哈哈</p></blockquote><p>到这里，我的工程代码框架已经大概写好了。</p><p><strong>此时的机械组在干嘛？</strong></p><p>我们让李文灿画新的工程，因为老人说想把他做的轻量化</p><div class="theme-admonition theme-admonition-danger alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>危险</div><div class="admonitionContent_S0QG"><p>画新工程，是我们做的最后悔的决定。</p></div></div><p>已经让机械组的看了很多开源了</p><p>其实对比起其他大学的工程，他们的整体框架确实是往简的方向的，整体框架轻量且流畅</p><p>但是没有积累，也没有机会出去交流，也没有试错的时间</p><p>（而且李文灿去当什么委员还是什么东西，暑假都没有陪我们看图和画图！！</p><div class="theme-admonition theme-admonition-danger alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>危险</div><div class="admonitionContent_S0QG"><p>预期要求太高，也是我第二后悔做的决定。</p><p>当初立Flag，要搞空接，想要搞二级抬升、二级前伸（没有一个人反驳我是最骚的，我当时不知道机器人制作规范的限高限制的这么死</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="10月份规则出台盲目堆料">10月份，规则出台，盲目堆料<a href="#10月份规则出台盲目堆料" class="hash-link" aria-label="10月份，规则出台，盲目堆料的直接链接" title="10月份，规则出台，盲目堆料的直接链接">​</a></h3><p><img loading="lazy" src="https://pic.imgdb.cn/item/647d623e1ddac507cc51852d" alt="7b870a7a1027ee38f46920cfc88c747" class="img_ev3q"></p><blockquote><p>上海交通大学的机器人的高稳定性的背后，是设计者对机器人功能需求的正确分析，对设计细节的考量，对项目进度的推进与对压力测试的严格要求。
设计者需要对各项功能的需求有极其深刻的理解和把握，一些基础而关键的需求万万不可偏废。首先，工程机器人最重要的一点是不翻倒，这一点通过前文的规则研究与需求分析也能轻易得出。在总决赛中，交大的工程机器人灵巧下坡，8秒即取到首箱弹丸，肆无忌惮上桥头，跳公路，卡位等，背后都蕴藏着为了降低重心而付出的心血。由此可见，交给操作手一台怎么开都开不翻的机器人是多么重要。反观有些出现过工程翻倒的队伍，就算其他功能做得再好，这种低级失误而导致的战败也会成为全体队员长久的伤痛。这些基础却关键的能力需要设计者去细细思考和拿捏，把简单细节做到极致，不要因为低级错误造成一年的遗憾。
注重人机工程，打造人机友好型产品。RoboMaster的参赛机器人不是简单的机器人，而是一款人机交互性极高的综合产品。工程机器人功能复杂，从机械结构设计到键位设计，都需要考虑操作手的操作体验，听取操作手的反馈并不断改进。</p></blockquote><p>这是我翻聊天记录找到的</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_S0QG"><p>上海交通大学的机器人的高稳定性的背后，是设计者对机器人功能需求的正确分析，对设计细节的考量，对项目进度的推进与对压力测试的严格要求。</p></div></div><p>这句话，字字都要好好思考，每一句话，都是我们工程组要为之加班考量的东西。</p><p>比如<code>功能需求的正确分析</code> ，我们在设计之初，没有对功能需求进行正确分析，比如<strong>盲目堆料</strong>想空接、想高自由度、什么二级抬升二级前伸都来了，其实要满足赛场上的经济需求，首先要能够兑换好银矿。</p><p>但是银矿怎么能够<strong>稳定、高效</strong>地去吸取，也是有考究的。</p><p>就如同我们当初让少辉画的机械臂，太过于像广工的大臂了。</p><p>我们一开始确实是定的传统抬升+前伸+机械臂的方案，但是我忘记大臂和小臂的区别了。</p><p>大臂就会把我们传统的框架给限死，因为机器人制作规范，同时效率低。</p><p>小臂，你看开源，很多都是小臂的。</p><p>比如<code>对设计细节的考量</code> ，细看小资源岛，其实和 死于话多 做出来的资源岛有区别的，正赛是有墙的，会顶住矿，而且实际做出来的高度好像也不一样。</p><p>比如<code>对项目进度的推进与对压力测试的严格要求</code>，我们当时项目推进地异常艰难，因为疫情和李文灿喜欢摸鱼的原因，没有push太多，push了也是画的一般。等到车出来了都快要比赛了，还何谈压力测试。</p><p>所以步兵和英雄够稳定的原因，有部分可以归功到联盟赛的失败。</p><div class="theme-admonition theme-admonition-danger alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>危险</div><div class="admonitionContent_S0QG"><p>所以，这赛季一定要对工程的需求有正确的分析，好好对细节有所考量，定好赛季目标（比如说就稳定高效吸取兑换银矿，金矿听天由命地空接），项目很狠推进（参考华工一个月两代车）在半年内一点要出车</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1月份寒假摸鱼进度冻结">1月份，寒假摸鱼，进度冻结<a href="#1月份寒假摸鱼进度冻结" class="hash-link" aria-label="1月份，寒假摸鱼，进度冻结的直接链接" title="1月份，寒假摸鱼，进度冻结的直接链接">​</a></h3><p>寒假留校的时候，最后悔的事情也还是让李文灿跑了。</p><p>留下少辉佳平，给我很狠地压榨了他们。</p><blockquote><p>我他妈要再信他们的一点逼话我就他妈的杀了他们</p><p>当时他跟我说，我都做出来了，让少辉维护一下，补一点小细节就可以了，我在哪里都能画图</p><p>你说你妈呢，小细节恶心少辉多久了，少辉还是步兵组的，真以为自己画的一代车能没有任何问题撒手就跑？</p><p>麻烦对你的沙笔儿子上点心，不要你以为，我要我认为</p><p>全部统统给我留校，不留校你就退队，滚犊子</p><p>只要你一天身为技术组的成员，活就能源源不断的来，不然就是你队友给你分担压力</p><p>哪怕你在实验室学习也行，起码你人还在</p><p>每次李文灿都会给我搞红温，还有那30质量的打印件</p></blockquote><p>然后寒假我把车带回去就不了了之了，调不了一点</p><p>抬升抬不了、臂装不上、前伸是气动的也不用想</p><p>一个人在家很憋屈的把Detect_Task写了，学C++和Arm架构去了</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_S0QG"><p>其实这个时候我有想学自动控制原理和ROS来优化机械臂的性能的，但是我一直找借口说没有臂就不搞了</p><p>所以</p><p>下一个任务就是学自动控制原理优化控制性能和ROS</p></div></div><p><strong>此时的硬件组也是处于假死状态</strong></p><p>线是我用官方那套东西组起来的，和邀请赛的一些队伍没有区别，一样脆弱</p><p>也不知道以前那套电调盒子的好处在哪，为什么老人喜欢用</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3月份否定新车回归老车">3月份，否定新车，回归老车<a href="#3月份否定新车回归老车" class="hash-link" aria-label="3月份，否定新车，回归老车的直接链接" title="3月份，否定新车，回归老车的直接链接">​</a></h3><p>自从寒假没有一点进度之后，我就push，赶紧全员回校备赛。</p><p>但是事与愿违，这台烂车中期评审都很难拍</p><p>抬升因为链条烂、沙笔联轴器、臂因为双2006虚位太大不好调，电控需要改算法，所以没搞，让一个2006强顶，结果就是电调滴滴滴的想，堵转，然后他掉力了。</p><p>对比起其他大学，设计的很傻逼。</p><p>请武老师过来，最后的决定是回归老车，老车拥有着比新车好的底盘性能、抬升性能，摒弃傻呗链条，不好调，还垃圾</p><p>多半链条选型和设计的方案有大问题，很多学校用的小链条加3508倒置直连，完美利用。</p><p>但是，为什么不用同步带？同步带只是容易老化，需要换而已，在老车上的性能可是能指指点点的。</p><p>最后，把臂移植到老车上，算是能基本实现他的功能了。</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5月份硬件上号拜托老人">5月份，硬件上号，拜托老人<a href="#5月份硬件上号拜托老人" class="hash-link" aria-label="5月份，硬件上号，拜托老人的直接链接" title="5月份，硬件上号，拜托老人的直接链接">​</a></h3><p>5月份基本上机械组已经出好车了，然后均壕把yuxiang和静仪分配到工程来做。</p><p>幸好当时苒升问要不要帮忙，刚好很闲。</p><p>抓住机会就是让老人来做，19的老人硬件硬实力是我的梦中情人，马上把底盘的活都交给苒升了。</p><p>具体操作就是我把硬件拓扑图列出来，然后分配工作给这三位。</p><p>但是还是出现了我害怕的问题，三个人的工作分配与交流有点问题，比如说绿色端子的线序，是乱的</p><p><img loading="lazy" src="https://pic.imgdb.cn/item/647ea7741ddac507cc3d7f93" alt="image-20230606042427591" class="img_ev3q"></p><p>电控需要尽早出台控制各个器件的方案，还要和机械组确定分电板主控板的位置和保护器件</p><p>然后尽早确定好板子，让老人检查</p><p>无可避免地会出现打好几个版本的板子、做线走线搞一两个星期的问题</p><p>所以我们硬件卡了很久很久</p><div class="theme-admonition theme-admonition-danger alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>危险</div><div class="admonitionContent_S0QG"><p>而且这个沙笔舵机，我们也不知道他这么容易炸，就算上了保护板我也感觉容易炸</p><p>上场炸了两个舵机...</p><p>而且那个布瑞特编码器，最后也没用上。。。</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="最终上场">最终上场<a href="#最终上场" class="hash-link" aria-label="最终上场的直接链接" title="最终上场的直接链接">​</a></h3><p>可能我是对机械组的异常自信吧，没有自己动手一个个列出来检查清单</p><p>硬件只要检查每个功能能不能正常运作，比如底盘四个电机能不能动、抬升前伸能不能用、机械臂正不正常</p><p>机械只要检查有没有地方松动（轮组的涨紧套），一些傻呗螺丝有没有松、伸展尺寸的限位有没有正常限住就可以了</p><p>可能我喜欢逃避，因为检查的越多感觉越紧张、压力越大，但是这样是不行的。</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="电控篇">电控篇<a href="#电控篇" class="hash-link" aria-label="电控篇的直接链接" title="电控篇的直接链接">​</a></h2><p><a href="https://github.com/tangx/Stop-Ask-Questions-The-Stupid-Ways/blob/master/README.md" target="_blank" rel="noopener noreferrer">别像弱智一样提问</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="esp32">ESP32<a href="#esp32" class="hash-link" aria-label="ESP32的直接链接" title="ESP32的直接链接">​</a></h3><p>目前esp32s3已经支持homekit sdk</p><p>目前有个很骚的方案，ESP32挂个前端来控制G7人/homekit</p><p>然后USB tinyusb虚拟串口报文控制</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="aceecf">ACEECF<a href="#aceecf" class="hash-link" aria-label="ACEECF的直接链接" title="ACEECF的直接链接">​</a></h3><p>看linux内核设计与实现后</p><p>比如初始化，可以用一个struct+linklist实现驱动初始化？函数指针</p><p>然后IPC进程间通讯也可以写</p><p><code>P12</code></p><p>大文件夹架构也可以优化成类linux</p><ol><li>doc</li><li>driver</li><li>init</li><li>ipc</li><li>lib</li><li>doc</li></ol><p>等等</p><p><del>然后通过ncurse库图形化控制make menuconfig<code>P13</code></del></p><p><del><a href="https://zhuanlan.zhihu.com/p/33640653" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/33640653</a></del></p><p>用Kconfig，但是要先学make</p><p><a href="http://sunyongfeng.com/201811/programmer/tools/kconfig-frontends" target="_blank" rel="noopener noreferrer">http://sunyongfeng.com/201811/programmer/tools/kconfig-frontends</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="管理篇">管理篇<a href="#管理篇" class="hash-link" aria-label="管理篇的直接链接" title="管理篇的直接链接">​</a></h2><p>带他们去打福建联赛</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>RoboMaster</category>
        </item>
        <item>
            <title><![CDATA[操作系统杂谈]]></title>
            <link>https://pansyhou.github.io/the-best-operating-system-teacher-i-have-ever-met</link>
            <guid>https://pansyhou.github.io/the-best-operating-system-teacher-i-have-ever-met</guid>
            <pubDate>Thu, 11 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[如何更有意思更高效更深刻更—— 地学习操作系统？]]></description>
            <content:encoded><![CDATA[<p>如何更有意思更高效更深刻更—— 地学习操作系统？</p><p><a href="https://www.bilibili.com/video/BV1Xx4y1V7JZ/?spm_id_from=333.999.0.0&amp;vd_source=1dec09b0beea25da1b1f70b68fbcf6d7" target="_blank" rel="noopener noreferrer">南京大学2023操作系统-P1 (蒋炎岩)_哔哩哔哩_bilibili</a></p><p><a href="https://jyywiki.cn/OS/2023/" target="_blank" rel="noopener noreferrer">操作系统：设计与实现 (2023 春季学期) (jyywiki.cn)</a></p><h1>如何更高效地学习OS？</h1><p>被我校OS和Tsinghua的洗礼，我貌似找到了一些门路。</p><ol><li>能够与实际编程环境相结合（很多老师是喜欢</li><li>忘了</li></ol><p>但是南大这门OS课需要前置课程，也就是我们普通大学的操作系统</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="osworkbench详解">OSworkbench详解<a href="#osworkbench详解" class="hash-link" aria-label="OSworkbench详解的直接链接" title="OSworkbench详解的直接链接">​</a></h2><p><a href="http://jyywiki.cn/AbstractMachine/AM_Programs" target="_blank" rel="noopener noreferrer">为 Bare-Metal 编程：编译、链接与加载</a></p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>OS</category>
        </item>
        <item>
            <title><![CDATA[一次突然的面试]]></title>
            <link>https://pansyhou.github.io/a-sudden-interview</link>
            <guid>https://pansyhou.github.io/a-sudden-interview</guid>
            <pubDate>Sat, 06 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[突然袭击的面试]]></description>
            <content:encoded><![CDATA[<p>突然袭击的面试</p><p>lora、tcpip、裁剪linux内核</p><p>烂</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="按照简历来准备吧自嗨时间">按照简历来准备吧（自嗨时间<a href="#按照简历来准备吧自嗨时间" class="hash-link" aria-label="按照简历来准备吧（自嗨时间的直接链接" title="按照简历来准备吧（自嗨时间的直接链接">​</a></h3><p>要烂啦</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rm">RM<a href="#rm" class="hash-link" aria-label="RM的直接链接" title="RM的直接链接">​</a></h3><blockquote><p>Robomaster 机甲大师工程机器人负责人 2022~至今
目前主要负责其工程机器人的嵌入式代码编写， 利用函数指针实现有限状态机和奇妙的面向对象、编写封装驱动、
运动控制算法等等，并使用 FreeRTOS 实时操作系统完成整车的运动控制。 目前正在 Linux 上学习 ROS 机器人操作系统完成对机械臂的路径规划运动控制等等  </p><p>简单介绍一下你在里面负责什么？</p></blockquote><p>这个项目的需求是能够完成整车的运动控制、机身状态切换和人机交互设计部分。</p><p>项目的底层是由两块stm32控制其外设完成的，比如说电机是由can协议发送报文到电调、舵机是控制PWM信号、功率监测芯片是i2c读他的寄存器、陀螺仪是SPI读数据、遥控器是读串口数据</p><p>中间层是由FreeRTOS提供的任务调度，由这个Real time operate system 提供进程的调度，为上层做铺垫。其中，我们开启了几个任务，一个是主任务，负责状态机的处理，第二个是遥控器数据处理任务，第三个是安全任务，负责定时监测各个外设有没有掉线，掉线后的处理等等，第四个是板间通讯，负责上下stm32的数据交换。</p><p>上层就是控制层，根据遥控数据，状态机处理后会跳到对应的处理函数，通过算法比如自动控制原理的pid、lqr实现电机的位置速度闭环驱动，缝合在一起组成整车的基本功能。</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="can">can<a href="#can" class="hash-link" aria-label="can的直接链接" title="can的直接链接">​</a></h4><p>每秒可传输的数据位的个数即为通讯中的波特率  </p><p>简单的物理层代表着要有个复杂的协议</p><p>数据帧以一个显性位(逻辑 0)开始，以 7 个连续的隐性位(逻辑 1)结束，在它们之间，
分别有仲裁段、控制段、数据段、 CRC 段和 ACK 段。  </p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="i2c">i2c<a href="#i2c" class="hash-link" aria-label="i2c的直接链接" title="i2c的直接链接">​</a></h4><p><a href="https://blog.csdn.net/D_Procedural_Life/article/details/105496366" target="_blank" rel="noopener noreferrer">【STM32笔记3】I2C的时序解读与软件模拟（即软件I2C的实现，另有软I2C与硬I2C的差异说明）_stm32 flash i2c 时序_D_Procedural_Life的博客-CSDN博客</a></p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="linux">linux<a href="#linux" class="hash-link" aria-label="linux的直接链接" title="linux的直接链接">​</a></h4><p>常见目录说明：
/bin： 存放二进制可执行文件(ls,cat,mkdir等)，常用命令一般都在这里；
/etc： 存放系统管理和配置文件；
/home： 存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示；
/usr ： 用于存放系统应用程序；
/opt： 额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把
tomcat等都安装到这里；
/proc： 虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息；
/root： 超级用户（系统管理员）的主目录（特权阶级o）；
/sbin: 存放二进制可执行文件，只有root才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如ifconfig等；
/dev： 用于存放设备文件；
/mnt： 系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统；
/boot： 存放用于系统引导时使用的各种文件；
/lib ： 存放着和系统运行相关的库文件 ；
/tmp： 用于存放各种临时文件，是公用的临时文件存储点；
/var： 用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等；
/lost+found： 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里。</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="freertos">FreeRTOS<a href="#freertos" class="hash-link" aria-label="FreeRTOS的直接链接" title="FreeRTOS的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="移植">移植<a href="#移植" class="hash-link" aria-label="移植的直接链接" title="移植的直接链接">​</a></h4><p> <a href="https://blog.51cto.com/u_14114084/3651586" target="_blank" rel="noopener noreferrer">【FreeRTOS】FreeRTOS学习笔记（1）— 使用HAL+ STM32F407ZGT6移植FreeRTOS_51CTO博客_freertos stm32f407</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lora">lora<a href="#lora" class="hash-link" aria-label="lora的直接链接" title="lora的直接链接">​</a></h3><p>勇闯无人区！</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="计网">计网<a href="#计网" class="hash-link" aria-label="计网的直接链接" title="计网的直接链接">​</a></h3><p>tcpip网络模型几层？</p><ol><li><strong>应用层</strong>：为用户提供应用功能，比如 HTTP、FTP、Telnet、DNS、SMTP等。</li><li><strong>传输层</strong>：为应用层提供网络支持的，两个传输协议，分别是 TCP 和 UDP。</li><li><strong>网络层</strong>：最常使用的是 IP 协议（Internet Protocol），IP 协议会将传输层的报文作为数据部分，再加上 IP 包头组装成 IP 报文，如果 IP 报文大小超过 MTU（以太网中一般为 1500 字节）就会再次进行分片，得到一个即将发送到网络的 IP 报文</li><li><strong>网络接口层</strong>：在 IP 头部的前面加上 MAC 头部，并封装成数据帧（Data frame）发送到网络上</li></ol><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tcp">TCP<a href="#tcp" class="hash-link" aria-label="TCP的直接链接" title="TCP的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="总结">总结<a href="#总结" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h3><p>我的准备还是少了，比如说没有看知乎或者说b站的模拟面试，了解整个流程，太依赖问别人获取信息了</p><p>感觉hr一上来给我讲一通的东西我也不懂，我不到啊</p><p>我问的还是少了，缺乏经验</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="问题">问题<a href="#问题" class="hash-link" aria-label="问题的直接链接" title="问题的直接链接">​</a></h3><ol><li>自我介绍最好还是准备周全一点吧，我随机应变（就是忘了准备）的自我介绍，完全就是看自己当时写的简历乱编的</li><li>有点紧张，不能正常思考（最好还是能够利用自己学过的东西，深挖，狠狠地讲）</li><li>多了解面试要问什么东西，比如说问面试官对公司的讲解、职位的工作内容、人事面的具体福利</li></ol>]]></content:encoded>
            <category>面试</category>
            <category>RoboMaster</category>
        </item>
        <item>
            <title><![CDATA[赛前19天瞎bb]]></title>
            <link>https://pansyhou.github.io/the-19days-before-robomaster</link>
            <guid>https://pansyhou.github.io/the-19days-before-robomaster</guid>
            <pubDate>Mon, 01 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[很久都没有写过日志了，是时候说说自己的心里话了，有话说不出，不知道说给谁，说了又不知道，没办法安慰我的。]]></description>
            <content:encoded><![CDATA[<p>很久都没有写过日志了，是时候说说自己的心里话了，有话说不出，不知道说给谁，说了又不知道，没办法安慰我的。</p><p>正好这不是上线了个博客嘛，随手写一下吧。</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="正题">正题<a href="#正题" class="hash-link" aria-label="正题的直接链接" title="正题的直接链接">​</a></h2><p>老实讲我现在应该在实验室陪着他们加班的，但是，愈来愈觉得，累</p><p>很多时候我呆在那都是干其他的活，或者说协调或者说闲聊，没多少时间是专注于自己的工作上的</p><p>为什么大二就想当管理层，因为大一觉得管理层有问题，你如果能找到当时的我，我可能有一堆想吐槽的，年轻气盛嘛</p><p>但是现在的我，感觉有点疲惫不堪了。</p><p>也许去不了正式超抗是对我的仁慈吧，但是还是要花一笔钱（还是对我有所考验）</p><p>到现在工程才出了车，而且还没完全出好，你让电控视觉怎么调</p><p>人手不足嘛 </p><p>是，我承认，今年人真心不够，很多时候都是梯队顶上来的，怪不得那时候婷婷就是正式队员，因为真心人手不够，当时就已经补招了。但是 我们没有。忘啦</p><p>不仅是这个的问题，钱也是个大问题。</p><p>超抗去长沙要1.5k，如果带多点梯队的话钱肯定要更多</p><p>没钱了...大学生（本身我自己就爱花钱，平时点多个宵夜啥的）</p><p>长沙要花1.5k啊哥，不少的支出。。。不好和爸妈开口，开了也不知道怎么掏的出来</p><p>怎么赚外快？</p><p>以前总调侃自己，学完stm32加上rm，能在嵌入式横着走，我看未必</p><p>我自己也不知道怎么找外快</p><p>难受</p><blockquote><p>华丽的转身 ：</p><p>不是熟人介绍，你会感觉崩溃的。搞不好连钱都拿不到。很麻烦的。</p><p>穿越时空：</p><p>过来人，不是熟人是不是钱少事多。</p><p>穿越时空：</p><p>运气特不好，还是像谈恋爱中的，你是好人。</p></blockquote><p>感谢爸妈给了我这么多支持，要不是他们心理素质强大，抗住了这片天，我可能早烂了</p><p>最后的最后还是要说一下感情</p><p>51这几天，天天有人在发朋友圈，去哪玩去哪玩，去见哪家的女朋友</p><p>老实讲还是挺压抑的。</p><p>从大一进入实验室以来，要么在实验室，要么在上课，要么在宿舍</p><p>哪来的什么旅游，感情</p><p>真好笑，这两年没什么产出，也没学什么，不愧是吊儿郎当小子</p><p>还旅游，还感情</p><p>总感觉，在给自己压力，明明我真的很想出去玩，明明我很想谈恋爱，但是我还是很想去学习提升自己，真的不想再吊儿郎当的了。</p><p>感情方面，没钱没能力又懒不想追，追了又不珍惜喜欢把人家当树洞，需求这么高你是甲方还是男朋友？</p><blockquote><p>要么我炸，要么你炸</p></blockquote><p>真讨厌</p><p>人的固定思维真难改，好累，讲不通的，不想让大家都好累，谁不喜欢大同世界</p><p>如果人们都能够心意相通，该多好。</p><p>如果我有能力让大家都舒服，该多好。</p><p>看完了，给你们整点好玩的<a href="/somethingInterest">嘻嘻</a> 如果打不开记得刷新一下</p>]]></content:encoded>
            <category>随笔</category>
            <category>杂谈</category>
            <category>RoboMaster</category>
        </item>
        <item>
            <title><![CDATA[麦克纳姆轮运动分解]]></title>
            <link>https://pansyhou.github.io/Decomposition-of-mecanum-wheel-motion</link>
            <guid>https://pansyhou.github.io/Decomposition-of-mecanum-wheel-motion</guid>
            <pubDate>Mon, 13 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[麦克纳姆轮运动分解，比CSDN更加快速上手]]></description>
            <content:encoded><![CDATA[<p>麦克纳姆轮运动分解，比CSDN更加快速上手</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/************************** Dongguan-University of Technology -ACE**************************</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @brief 底盘独立模式，右手系，食指X ，中指Y</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param C </span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param X_IN</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param Y_IN</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param Z_IN</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> * @param ExpRescue </span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"> ************************** Dongguan-University of Technology -ACE***************************/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// 小轮法向量向中心</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// 1,2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// 3,4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">Chassis_Indepen_Drive</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">C_t </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain">C</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> X_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> Y_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">int16_t</span><span class="token plain"> ExpRescue</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">uint8_t</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">int16_t</span><span class="token plain"> Val</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(106, 153, 85)">//记录电机实时速度�?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">int16_t</span><span class="token plain"> MAX </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain">               </span><span class="token comment" style="color:rgb(106, 153, 85)">//四个电机里的�?大�?�度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> SPID_OUT</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain">             </span><span class="token comment" style="color:rgb(106, 153, 85)">// PIDout</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Z_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">!=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        Z_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/*底盘麦轮运动分解*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/*速度增益*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">*=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">*=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">*=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">*=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/*PID处理*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">i </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"> i</span><span class="token operator" style="color:rgb(212, 212, 212)">++</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">PidCalculate</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token plain">C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SPID</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">Encoder</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">Speed</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(106, 153, 85)">//得到输出�?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token comment" style="color:rgb(106, 153, 85)">//        Val[i] = C-&gt;WheelMotor[i].Encoder-&gt;Speed[1];    //记录电机实时速度�?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">CAN1_C620_OR_C610_201_TO_204_SendMsg</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SPID</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SPID</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                                         C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SPID</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SPID</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://pic2.imgdb.cn/item/644e1bbc0d2dde5777d42909.jpg" class="img_ev3q"></p><p>先假定这几个轮子和电机在数组里的编号，电调ID往编号里+1即可。</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="对电机转速作出正负区分">对电机转速作出正负区分<a href="#对电机转速作出正负区分" class="hash-link" aria-label="对电机转速作出正负区分的直接链接" title="对电机转速作出正负区分的直接链接">​</a></h2><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    C</span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain">WheelMotor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ExpSpeed </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">X_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Y_IN </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> Z_IN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以看到0和2号被加了个负，因为与1和3的转动方向不一致，取反即可。</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>警告</div><div class="admonitionContent_S0QG"><p>如果想设置不同的ID，比如说顺时针或者逆时针比较好记，那就改变他这个负号改变速度方向即可。</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="对输入量进行麦轮运动分解">对输入量进行麦轮运动分解<a href="#对输入量进行麦轮运动分解" class="hash-link" aria-label="对输入量进行麦轮运动分解的直接链接" title="对输入量进行麦轮运动分解的直接链接">​</a></h2><p><img loading="lazy" src="https://pic2.imgdb.cn/item/644e1c780d2dde5777d4bb90.jpg" class="img_ev3q"></p><p>就能得到上述公式</p>]]></content:encoded>
            <category>麦克纳姆轮</category>
            <category>RoboMaster</category>
        </item>
    </channel>
</rss>